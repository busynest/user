import { PayloadAction } from "@reduxjs/toolkit";
export declare const initialState: {
    settings: string;
    login: boolean;
    drawer: boolean;
    register: boolean;
    userId: string;
    customer: string;
    profileChoice: string;
    name: string;
    photoURL: string;
    phone: string;
    email: string;
};
export declare const userSlice: import("@reduxjs/toolkit").Slice<{
    settings: string;
    login: boolean;
    drawer: boolean;
    register: boolean;
    userId: string;
    customer: string;
    profileChoice: string;
    name: string;
    photoURL: string;
    phone: string;
    email: string;
}, {
    navigateAuth: (state: import("immer").WritableDraft<{
        settings: string;
        login: boolean;
        drawer: boolean;
        register: boolean;
        userId: string;
        customer: string;
        profileChoice: string;
        name: string;
        photoURL: string;
        phone: string;
        email: string;
    }>, action: PayloadAction<string>) => void;
    userAuth: (state: import("immer").WritableDraft<{
        settings: string;
        login: boolean;
        drawer: boolean;
        register: boolean;
        userId: string;
        customer: string;
        profileChoice: string;
        name: string;
        photoURL: string;
        phone: string;
        email: string;
    }>, action: PayloadAction<boolean>) => void;
    toggleSign: (state: import("immer").WritableDraft<{
        settings: string;
        login: boolean;
        drawer: boolean;
        register: boolean;
        userId: string;
        customer: string;
        profileChoice: string;
        name: string;
        photoURL: string;
        phone: string;
        email: string;
    }>) => void;
    closeSign: (state: import("immer").WritableDraft<{
        settings: string;
        login: boolean;
        drawer: boolean;
        register: boolean;
        userId: string;
        customer: string;
        profileChoice: string;
        name: string;
        photoURL: string;
        phone: string;
        email: string;
    }>) => void;
    signUpAction: (state: import("immer").WritableDraft<{
        settings: string;
        login: boolean;
        drawer: boolean;
        register: boolean;
        userId: string;
        customer: string;
        profileChoice: string;
        name: string;
        photoURL: string;
        phone: string;
        email: string;
    }>) => void;
    signUpClose: (state: import("immer").WritableDraft<{
        settings: string;
        login: boolean;
        drawer: boolean;
        register: boolean;
        userId: string;
        customer: string;
        profileChoice: string;
        name: string;
        photoURL: string;
        phone: string;
        email: string;
    }>, action: PayloadAction<boolean>) => void;
    iconAuth: (state: import("immer").WritableDraft<{
        settings: string;
        login: boolean;
        drawer: boolean;
        register: boolean;
        userId: string;
        customer: string;
        profileChoice: string;
        name: string;
        photoURL: string;
        phone: string;
        email: string;
    }>, action: PayloadAction<string>) => void;
    nameAuth: (state: import("immer").WritableDraft<{
        settings: string;
        login: boolean;
        drawer: boolean;
        register: boolean;
        userId: string;
        customer: string;
        profileChoice: string;
        name: string;
        photoURL: string;
        phone: string;
        email: string;
    }>, action: PayloadAction<string>) => void;
}, "user", "user", import("@reduxjs/toolkit").SliceSelectors<{
    settings: string;
    login: boolean;
    drawer: boolean;
    register: boolean;
    userId: string;
    customer: string;
    profileChoice: string;
    name: string;
    photoURL: string;
    phone: string;
    email: string;
}>>;
export declare const navigateAuth: import("@reduxjs/toolkit").ActionCreatorWithPayload<string, "user/navigateAuth">, iconAuth: import("@reduxjs/toolkit").ActionCreatorWithPayload<string, "user/iconAuth">, nameAuth: import("@reduxjs/toolkit").ActionCreatorWithPayload<string, "user/nameAuth">, userAuth: import("@reduxjs/toolkit").ActionCreatorWithPayload<boolean, "user/userAuth">, toggleSign: import("@reduxjs/toolkit").ActionCreatorWithoutPayload<"user/toggleSign">, closeSign: import("@reduxjs/toolkit").ActionCreatorWithoutPayload<"user/closeSign">, signUpAction: import("@reduxjs/toolkit").ActionCreatorWithoutPayload<"user/signUpAction">, signUpClose: import("@reduxjs/toolkit").ActionCreatorWithPayload<boolean, "user/signUpClose">;
declare const _default: import("redux").Reducer<{
    settings: string;
    login: boolean;
    drawer: boolean;
    register: boolean;
    userId: string;
    customer: string;
    profileChoice: string;
    name: string;
    photoURL: string;
    phone: string;
    email: string;
}>;
export default _default;
